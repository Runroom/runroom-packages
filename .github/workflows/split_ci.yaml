name: Split CI

on:
  push:
    branches: [master]
  pull_request:

env:
  COMPOSER_ROOT_VERSION: dev-master

jobs:
  provide_packages_json:
    name: Provide packages JSON
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ['8.2']
    steps:
      - uses: actions/checkout@v3
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: zip, pdo_sqlite, gd
          coverage: none
      - uses: ramsey/composer-install@v2
      - id: output_data
        run: echo "::set-output name=matrix::$(vendor/bin/monorepo-builder packages-json --tests)"
    outputs:
      matrix: ${{ steps.output_data.outputs.matrix }}
  build:
    name: PHP ${{ matrix.php }} + ${{ matrix.dependencies }} + ${{ matrix.packages }}
    runs-on: ubuntu-latest
    needs: provide_packages_json
    strategy:
      matrix:
        php: ['8.2']
        packages: ${{ fromJson(needs.provide_packages_json.outputs.matrix ) }}
        dependencies: [lowest, highest]
    steps:
      - uses: actions/checkout@v3
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: zip, pdo_sqlite, gd
          coverage: none
      - run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"
      - run: cd packages/${{ matrix.packages }} && composer validate --strict
      - uses: ramsey/composer-install@v2
      - run: vendor/bin/monorepo-builder localize-composer-paths packages/${{ matrix.packages }}/composer.json --ansi
      - uses: ramsey/composer-install@v2
        with:
          dependency-versions: ${{ matrix.dependencies }}
          composer-options: --working-dir=packages/${{ matrix.packages }}
      - run: cd packages/${{ matrix.packages }} && vendor/bin/phpunit
